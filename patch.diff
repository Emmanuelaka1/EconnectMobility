diff --git a/src/components/topbar/ConnectionBadge.tsx b/src/components/topbar/ConnectionBadge.tsx
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/src/components/topbar/ConnectionBadge.tsx
@@ -0,0 +1,28 @@
+import React from "react";
+import { useAuthStore } from "@/core/auth/auth.store";
+
+export default function ConnectionBadge() {
+  const isAuth = useAuthStore((s) => Boolean(s.token));
+  return (
+    <span
+      className={[
+        "inline-flex items-center rounded-md px-3 py-1 text-sm font-medium",
+        isAuth
+          ? "bg-emerald-900/40 text-emerald-300 ring-1 ring-emerald-800/60"
+          : "bg-yellow-900/30 text-yellow-200 ring-1 ring-yellow-700/60",
+      ].join(" ")}
+      aria-live="polite"
+    >
+      {isAuth ? "Connect√©" : "Mode invit√© (non connect√©)"}
+    </span>
+  );
+}
diff --git a/src/components/topbar/UserAvatar.tsx b/src/components/topbar/UserAvatar.tsx
new file mode 100644
index 0000000..2222222
--- /dev/null
+++ b/src/components/topbar/UserAvatar.tsx
@@ -0,0 +1,28 @@
+import React from "react";
+
+function initials(name?: string) {
+  if (!name) return "U";
+  return name.split(" ").filter(Boolean).slice(0,2).map(n=>n[0]?.toUpperCase()).join("");
+}
+
+export default function UserAvatar({ name, url, size=32 }:{name?:string; url?:string|null; size?:number}) {
+  const style = { width: size, height: size };
+  if (url) {
+    return (
+      <img
+        src={url}
+        alt={name ?? "Avatar"}
+        className="rounded-full object-cover ring-2 ring-white/10"
+        style={style}
+      />
+    );
+  }
+  return (
+    <div className="rounded-full bg-slate-600 text-white grid place-items-center ring-2 ring-white/10" style={style}>
+      <span className="text-xs font-semibold">{initials(name)}</span>
+    </div>
+  );
+}
diff --git a/src/components/topbar/UserMenu.tsx b/src/components/topbar/UserMenu.tsx
new file mode 100644
index 0000000..3333333
--- /dev/null
+++ b/src/components/topbar/UserMenu.tsx
@@ -0,0 +1,98 @@
+import React, { useEffect, useRef, useState } from "react";
+import { Link, useNavigate } from "react-router-dom";
+import { useAuthStore } from "@/core/auth/auth.store";
+import UserAvatar from "./UserAvatar";
+
+export default function UserMenu() {
+  const { user, token, logout } = useAuthStore();
+  const isAuth = Boolean(token);
+  const navigate = useNavigate();
+  const [open, setOpen] = useState(false);
+  const ref = useRef<HTMLDivElement>(null);
+
+  useEffect(() => {
+    const onDoc = (e: MouseEvent) => {
+      if (ref.current && !ref.current.contains(e.target as Node)) setOpen(false);
+    };
+    document.addEventListener("click", onDoc);
+    return () => document.removeEventListener("click", onDoc);
+  }, []);
+
+  const handleLogout = () => {
+    logout();
+    setOpen(false);
+    navigate("/login");
+  };
+
+  const fullName = user?.fullName ?? "Invit√©";
+  const role = user?.role ?? "Guest";
+
+  return (
+    <div className="relative" ref={ref}>
+      <button
+        onClick={() => setOpen((v) => !v)}
+        className="flex items-center gap-3 rounded-md px-2 py-1 hover:bg-white/5 focus:outline-none"
+        aria-haspopup="menu"
+        aria-expanded={open}
+      >
+        <UserAvatar name={fullName} url={user?.avatarUrl ?? undefined} size={32} />
+        <div className="text-left hidden sm:block">
+          <div className="text-sm font-medium text-slate-100 leading-4">{fullName}</div>
+          <div className="text-xs text-slate-400">{role}</div>
+        </div>
+        <svg
+          className={`h-4 w-4 text-slate-300 transition-transform ${open ? "rotate-180" : ""}`}
+          viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"
+        >
+          <path fillRule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.14l3.71-3.91a.75.75 0 111.08 1.04l-4.25 4.48a.75.75 0 01-1.08 0L5.21 8.27a.75.75 0 01.02-1.06z" clipRule="evenodd"/>
+        </svg>
+      </button>
+
+      {open && (
+        <div
+          role="menu"
+          className="absolute right-0 mt-2 w-64 rounded-xl bg-slate-900/95 backdrop-blur border border-white/10 shadow-2xl p-2 z-50"
+        >
+          <div className="px-3 py-2 text-sm text-slate-200 border-b border-white/10">
+            <div className="font-semibold">Welcome {fullName.split(" ")[0]}!</div>
+          </div>
+
+          <div className="py-1">
+            <Link
+              to="/recettes"
+              className="flex items-center gap-2 px-3 py-2 rounded-md text-sm text-slate-200 hover:bg-white/5"
+              onClick={() => setOpen(false)}
+            >
+              <span className="inline-block h-5 w-5">üìä</span>
+              Suivi Recette
+            </Link>
+
+            {!isAuth && (
+              <Link
+                to="/login"
+                className="flex items-center gap-2 px-3 py-2 rounded-md text-sm text-slate-200 hover:bg-white/5"
+                onClick={() => setOpen(false)}
+              >
+                <span className="inline-block h-5 w-5">üîê</span>
+                Se connecter
+              </Link>
+            )}
+
+            {isAuth && (
+              <button
+                onClick={handleLogout}
+                className="w-full flex items-center gap-2 px-3 py-2 rounded-md text-sm text-rose-300 hover:bg-rose-500/10"
+              >
+                <span className="inline-block h-5 w-5">‚Ü©Ô∏è</span>
+                Logout
+              </button>
+            )}
+          </div>
+        </div>
+      )}
+    </div>
+  );
+}
diff --git a/src/components/layout/Topbar.tsx b/src/components/layout/Topbar.tsx
new file mode 100644
index 0000000..4444444
--- /dev/null
+++ b/src/components/layout/Topbar.tsx
@@ -0,0 +1,43 @@
+import React from "react";
+import ConnectionBadge from "@/components/topbar/ConnectionBadge";
+import UserMenu from "@/components/topbar/UserMenu";
+
+export default function Topbar() {
+  return (
+    <header className="sticky top-0 z-40 w-full border-b border-white/10 bg-slate-950/80 backdrop-blur">
+      <div className="mx-auto max-w-screen-2xl px-4 sm:px-6 lg:px-8">
+        <div className="h-14 flex items-center justify-between gap-3">
+          {/* Search (optional) */}
+          <div className="flex-1 min-w-0">
+            <div className="hidden md:flex items-center gap-2 rounded-lg bg-slate-900 border border-white/10 px-3 py-2">
+              <svg className="h-4 w-4 text-slate-400" viewBox="0 0 24 24" fill="none">
+                <path d="M21 21l-4.3-4.3M11 19a8 8 0 100-16 8 8 0 000 16z" stroke="currentColor" strokeWidth="2" strokeLinecap="round"/>
+              </svg>
+              <input
+                placeholder="Search properties, clients‚Ä¶"
+                className="bg-transparent placeholder-slate-500 text-slate-200 outline-none w-full"
+              />
+            </div>
+          </div>
+
+          <div className="hidden sm:block">
+            <ConnectionBadge />
+          </div>
+
+          <div className="flex items-center gap-3">
+            <button className="hidden sm:inline-flex h-9 w-9 items-center justify-center rounded-lg hover:bg-white/5">
+              <span aria-hidden>üîî</span>
+              <span className="sr-only">Notifications</span>
+            </button>
+            <UserMenu />
+          </div>
+        </div>
+      </div>
+    </header>
+  );
+}
diff --git a/src/components/layout/AppShell.tsx b/src/components/layout/AppShell.tsx
new file mode 100644
index 0000000..5555555
--- /dev/null
+++ b/src/components/layout/AppShell.tsx
@@ -0,0 +1,24 @@
+import React from "react";
+import { Outlet } from "react-router-dom";
+import Sidebar from "./Sidebar"; // existing file
+import Topbar from "./Topbar";
+
+export default function AppShell() {
+  return (
+    <div className="flex min-h-screen bg-slate-950 text-slate-100">
+      <Sidebar />
+      <div className="flex-1 flex flex-col">
+        <Topbar />
+        <main className="flex-1 p-4 sm:p-6">
+          <Outlet />
+        </main>
+      </div>
+    </div>
+  );
+}
diff --git a/src/app/router.with-appshell.example.tsx b/src/app/router.with-appshell.example.tsx
new file mode 100644
index 0000000..6666666
--- /dev/null
+++ b/src/app/router.with-appshell.example.tsx
@@ -0,0 +1,32 @@
+import React from "react";
+import { createBrowserRouter } from "react-router-dom";
+import AppShell from "@/components/layout/AppShell";
+// import LoginPage from "@/features/auth/LoginPage";
+// import DashboardPage from "@/features/dashboard/pages/DashboardPage";
+// import RecettesPage from "@/features/recettes/pages/RecettesPage";
+
+export const router = createBrowserRouter([
+  // { path: "/login", element: <LoginPage /> },
+  {
+    path: "/",
+    element: <AppShell />,
+    children: [
+      // { index: true, element: <DashboardPage /> },
+      // { path: "recettes", element: <RecettesPage /> },
+    ],
+  },
+  { path: "*", element: <div>404</div> },
+]);
+
+export default router;
diff --git a/INSTRUCTIONS_ROUTER_UPDATE.txt b/INSTRUCTIONS_ROUTER_UPDATE.txt
new file mode 100644
index 0000000..7777777
--- /dev/null
+++ b/INSTRUCTIONS_ROUTER_UPDATE.txt
@@ -0,0 +1,21 @@
+// √âtapes pour brancher la Topbar via AppShell :
+// 1) Ouvrez votre fichier de router existant (ex: src/app/router.tsx).
+// 2) Importez AppShell :  import AppShell from "@/components/layout/AppShell";
+// 3) Remplacez l'√©l√©ment de la route racine par <AppShell /> et gardez vos enfants (pages) inchang√©s.
+//
+// Exemple minimal :
+//
+// import React from "react";
+// import { createBrowserRouter } from "react-router-dom";
+// import AppShell from "@/components/layout/AppShell";
+//
+// export const router = createBrowserRouter([
+//   {
+//     path: "/",
+//     element: <AppShell />,
+//     children: [
+//       { index: true, element: <DashboardPage /> },
+//       { path: "recettes", element: <RecettesPage /> },
+//     ],
+//   },
+// ]);
